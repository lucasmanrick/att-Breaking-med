<link rel="stylesheet" href="css/agendamentoConsulta.css">



<section class="agendamentoDeConsulta">
  <div class="container">
    <span></span>
    <span></span>
    <span></span>
    <span></span>
    <div class="div-titles">
      <h3>Agendamento de Consulta</h3>
    </div>

    <div class="formstotal">
      <form class="forms" id="form" action="">
        
        <input placeholder="CPF do cliente" type="text" required name="CPF" id="CPF">
        <select class="form-control" name="Nome" id="Nome">
          <option value="">Medicos disponiveis: </option>
        </select>
        <select class="form-control Especialidade" name="Especialidade" id="Especialidade">
          <option value="">Selecione uma especialidade:</option>
        </select>
      </form>

      <div class="input-container">
        <div id="divHora">
          <label for="Horinha" id="Horinha">Hora da consulta:</label>
          <input placeholder="Hora" name="hora" type="text" required id="Hora">
        </div>

        <div id="Datinha">
          <label for="Datinha">Data da consulta:</label>
          <input type="Date" name="Datinha" lang="text" required id="Data">
        </div>
      </div>
    </div>

    <div class="btn">
      <button type="button" id="Agendar">Agendar</button>
      <button type="button" id="Voltar">Voltar</button>
    </div>
  </div>
</section>

<script>
  const dataUser = JSON.parse(sessionStorage.getItem('userData'))
  const token = dataUser.token

  fetch('/DadosParaRegistroConsulta', {
    method: 'GET',
    headers: {
      'Content-Type': 'application/json',
      authorization: token
    }
  })
    .then(response => response.json())
    .then(data => {
      if (data.result === false) {
        alert("não foi possivel retornar as especializações disponiveis para registro erro:", data.cadastroMessage)
        return
      } else if (data.auth === false) {
        alert('usuario deslogado, logue novamente para continuar')
        window.location = '/login'
      }
      sessionStorage.setItem('especialidadesToConsulta', '')
      sessionStorage.setItem("especialidadesToConsulta", JSON.stringify(data));

      const selectEspecialidade = document.getElementById('Especialidade')

      const receiveEspecialities = JSON.parse(sessionStorage.getItem("especialidadesToConsulta"))

      const receiveAllOptions = document.getElementsByTagName('Option')


      receiveEspecialities.moreInfos.forEach(e => {
        let verificaNecessidade = true;
        for (let i = 0; i < receiveAllOptions.length; i++) {
          if (e.especialidade_id == receiveAllOptions[i].attributes.value.value) {
            verificaNecessidade = false
            return
          }
        }
        if (verificaNecessidade === true) {
          const createNewOption = document.createElement('option')
          createNewOption.value = `${e.especialidade_id}`;
          createNewOption.innerText = `${e.desc_especialidade}`
          selectEspecialidade.appendChild(createNewOption)
        }

      })

      selectEspecialidade.addEventListener('change', (ev) => {
        const seletor = document.getElementsByClassName('Especialidade')[0]
        const valorSelecionado = seletor.value


        fetch('/MedicoComEspecialidadeEspecifica', {
          method: 'GET',
          headers: {
            'Content-Type': 'application/json',
            authorization: token,
            idEspecialidade: valorSelecionado
          }
        }).then(response => response.json())
          .then(data => {
            if (data.result === false) {
              alert("não foi possivel retornar as especializações disponiveis para registro erro:", data.cadastroMessage)
              return
            } else if (data.auth === false) {
              alert('usuario deslogado, logue novamente para continuar')
              window.location = '/login'
            }

            if (data.result === true) {
              localStorage.setItem('medicInfo', '')
              localStorage.setItem('medicInfo', JSON.stringify(data))

              const selectNames = document.getElementById("Nome")
              selectNames.innerHTML = ''
              const allOptionsAttVerify = document.getElementsByTagName('Option')

              data.moreInfos.forEach(dataWorker => {
                let secondVerifyNecessity = true
                for (let i = 0; i < allOptionsAttVerify.length; i++) {
                  if (dataWorker.funcionario_id == allOptionsAttVerify[i].attributes.value.value) {
                    secondVerifyNecessity = false
                    return
                  }
                }

                if (secondVerifyNecessity === true) {
                  const createNewOption = document.createElement('option')
                  createNewOption.value = `${dataWorker.funcionario_id}`;
                  createNewOption.innerText = `${dataWorker.nome}`
                  selectNames.appendChild(createNewOption)
                }
              })
            }

          })

      });

    })
    .catch(error => {
      console.error('Erro:', error);
    });

  document.getElementById('form').addEventListener("submit", (e) => {
    e.preventDefault();
  })

  document.getElementById('Agendar').addEventListener('click', async e => {
    const selectNames = document.getElementById("Nome")
    const allOptionsAttVerify = document.getElementsByTagName('Option')
    const seletor = document.getElementsByClassName('Especialidade')[0]
    const especialidade_id = parseInt(seletor.value)
    const cpfPaciente = document.getElementById('CPF').value
    const data = document.getElementById('Data').value
    const hora = document.getElementById('Hora').value

    let armazenaIdPessFuncionarioId = localStorage.getItem('medicInfo')
    armazenaIdPessFuncionarioId = JSON.parse(armazenaIdPessFuncionarioId)
    const funcionario_id = armazenaIdPessFuncionarioId.moreInfos[0].funcionario_id
    armazenaIdPessFuncionarioId = armazenaIdPessFuncionarioId.moreInfos[0].funcionario_pessoa_id

    fetch('/NovaConsulta', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        authorization: token
      },
      body: JSON.stringify({
        data: data,
        hora: hora,
        status: status,
        cpfPaciente: cpfPaciente,
        funcionario_id: funcionario_id,
        funcionario_pessoa_id: armazenaIdPessFuncionarioId,
        especialidade_id: especialidade_id
      })
    }).then(response => response.json())
      .then(data => {
        alert(data.consultaMessage)
      }).catch(e => {
        console.log(e)
      })
  })
</script>

